{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,OAfM,CACXO,KAAMC,SAASC,cAAc,WA4C1BF,KAAKG,iBAAiB,UAI3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAA8BC,GAnBXN,EAmBuBI,EAAMG,cAlB1CC,EAAO,GAEb,IAAIC,SAAST,GAAMU,SAAQ,SAACC,EAAOC,GACjCJ,EAAKI,GAAQd,KAAKe,IAAIC,OAAOH,OAGxBH,GAYDf,EAAwBa,EAAxBb,MAAOsB,EAAiBT,EAAjBS,KAAMC,EAAWV,EAAXU,OAnBrB,IAAqBhB,EACbQ,EAoBN,GAAIQ,GAAU,EACZ,QApCJ,SAA0BvB,EAAOsB,EAAMC,GACrC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,IAC3B1B,EAAc0B,EAAGxB,GACdyB,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAU4B,EAAKD,EAAL1B,MACjBJ,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAANH,EAAM,UAE9DI,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAU4B,EAAKD,EAAL1B,MAClBJ,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAANH,EAAM,UAG9D3B,GAASsB,GA6BXW,CAAiBjC,EAAOsB,EAAMC,GAE9BZ,EAAMG,cAAcoB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\n//------------------------------FUNCTIONS------------------------------\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromiseSet(delay, step, amount) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n\nfunction getFormData(form) {\n  const data = {};\n\n  new FormData(form).forEach((value, name) => {\n    data[name] = Math.abs(Number(value));\n  });\n\n  return data;\n}\n\n//------------------------------EVENT LISTENERS------------------------------\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n//------------------------------EVENT HANDLERS------------------------------\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let { delay, step, amount } = getFormData(event.currentTarget);\n\n  if (amount <= 0) {\n    return;\n  }\n\n  createPromiseSet(delay, step, amount);\n\n  event.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","addEventListener","event","preventDefault","ref","currentTarget","data","FormData","forEach","value","name","abs","Number","step","amount","i","then","param","_$delay","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createPromiseSet","reset"],"version":3,"file":"03-promises.545242e3.js.map"}