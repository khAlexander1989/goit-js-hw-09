{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,OAfM,CACXO,KAAMC,SAASC,cAAc,WA4C1BF,KAAKG,iBAAiB,UAI3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAnBrB,SAAqBP,GACnB,MAAMQ,EAAO,GAMb,OAJA,IAAIC,SAAST,GAAMU,SAAQ,CAACC,EAAOC,KACjCJ,EAAKI,GAAQd,KAAKe,IAAIC,OAAOH,OAGxBH,EAYuBO,CAAYX,EAAMY,eAEhD,GAAIT,GAAU,EACZ,QApCJ,SAA0BU,EAAOX,EAAMC,GACrC,IAAK,IAAIW,EAAI,EAAGA,GAAKX,EAAQW,IAC3B3B,EAAc2B,EAAGD,GACdE,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,UAEtD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA+B,OAAOG,QAAQ,sBAAoB/B,QAAeC,UAGtDwB,GAASX,GA6BXkB,CAAiB/B,EAAOa,EAAMC,GAE9BH,EAAMY,cAAcS","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\n//------------------------------FUNCTIONS------------------------------\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromiseSet(delay, step, amount) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n\nfunction getFormData(form) {\n  const data = {};\n\n  new FormData(form).forEach((value, name) => {\n    data[name] = Math.abs(Number(value));\n  });\n\n  return data;\n}\n\n//------------------------------EVENT LISTENERS------------------------------\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n//------------------------------EVENT HANDLERS------------------------------\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let { delay, step, amount } = getFormData(event.currentTarget);\n\n  if (amount <= 0) {\n    return;\n  }\n\n  createPromiseSet(delay, step, amount);\n\n  event.currentTarget.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","addEventListener","event","preventDefault","step","amount","data","FormData","forEach","value","name","abs","Number","$47d4ff9957288465$var$getFormData","currentTarget","delay1","i","then","Notify","success","catch","failure","$47d4ff9957288465$var$createPromiseSet","reset"],"version":3,"file":"03-promises.14b72d2c.js.map"}